# build stage
FROM node:lts-alpine as build-stage

ARG VUE_APP_BACKEND_URL
ARG VUE_APP_MAPS_API_KEY 
ARG VUE_APP_FIREBASE_API_KEY 
ARG VUE_APP_FIREBASE_AUTH_DOMAIN 
ARG VUE_APP_FIREBASE_PROJECT_ID 
ARG VUE_APP_FIREBASE_STORAGE_BUCKET 
ARG VUE_APP_FIREBASE_MESSAGING_SENDER_ID 
ARG VUE_APP_FIREBASE_APP_ID 
ARG VUE_APP_FIREBASE_MEASUREMENT_ID 

ENV VUE_APP_BACKEND_URL ${VUE_APP_BACKEND_URL}
ENV VUE_APP_MAPS_API_KEY ${VUE_APP_MAPS_API_KEY}
ENV VUE_APP_FIREBASE_API_KEY ${VUE_APP_FIREBASE_API_KEY}
ENV VUE_APP_FIREBASE_AUTH_DOMAIN ${VUE_APP_FIREBASE_AUTH_DOMAIN}}
ENV VUE_APP_FIREBASE_PROJECT_ID ${VUE_APP_FIREBASE_PROJECT_ID}
ENV VUE_APP_FIREBASE_STORAGE_BUCKET ${VUE_APP_FIREBASE_STORAGE_BUCKET}
ENV VUE_APP_FIREBASE_MESSAGING_SENDER_ID ${VUE_APP_FIREBASE_MESSAGING_SENDER_ID}
ENV VUE_APP_FIREBASE_APP_ID ${VUE_APP_FIREBASE_APP_ID}
ENV VUE_APP_FIREBASE_MEASUREMENT_ID ${VUE_APP_FIREBASE_MEASUREMENT_ID}

WORKDIR /app
COPY package*.json ./
RUN npm install
COPY . .
RUN npm run build

# production stage
FROM nginx:stable-alpine as production-stage
COPY nginx.conf /etc/nginx/conf.d/configfile.template
COPY --from=build-stage /app/dist /usr/share/nginx/html
ENV PORT 8080
ENV HOST 0.0.0.0
EXPOSE 8080
CMD sh -c "envsubst '\$PORT' < /etc/nginx/conf.d/configfile.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
